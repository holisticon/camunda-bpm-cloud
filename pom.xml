<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda</groupId>
    <artifactId>camunda-release-parent</artifactId>
    <version>2.5</version>
    <!-- DO NOT REMOVE EMPTY TAG https://issues.apache.org/jira/browse/MNG-4687 -->
    <relativePath />
  </parent>

  <groupId>org.camunda.bpm.extension.cloud</groupId>
  <artifactId>camunda-bpm-cloud-root</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <packaging>pom</packaging>

  <modules>
    <module>test</module>
    <module>examples</module>
    <module>extension</module>
  </modules>

  <properties>
    <java.version>1.8</java.version>
    <!-- for camunda -->
    <version.java>${java.version}</version.java>

    <spring-boot.version>1.4.3.RELEASE</spring-boot.version>
    <spring-cloud.version>Brixton.SR5</spring-cloud.version>

    <camunda.version>7.5.0</camunda.version>
    <camunda-springboot.version>1.3.0</camunda-springboot.version>
    <camunda-reactor.version>1.2</camunda-reactor.version>

    <lombok.version>1.16.10</lombok.version>
    <logstash-logback-encoder.version>4.9</logstash-logback-encoder.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- SPRING BOOT -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- SPRING CLOUD -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- CAMUNDA -->
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.camunda.bpm.extension</groupId>
        <artifactId>camunda-bpm-reactor-core</artifactId>
        <version>${camunda-reactor.version}</version>
      </dependency>

      <dependency>
        <groupId>org.camunda.bpm.extension</groupId>
        <artifactId>camunda-bpm-spring-boot-starter</artifactId>
        <version>${camunda-springboot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.camunda.bpm.extension</groupId>
        <artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
        <version>${camunda-springboot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.camunda.bpm.extension</groupId>
        <artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
        <version>${camunda-springboot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.camunda.bpm.extension.cloud</groupId>
        <artifactId>camunda-bpm-cloud-test</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>net.logstash.logback</groupId>
        <artifactId>logstash-logback-encoder</artifactId>
        <version>${logstash-logback-encoder.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries />
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <!-- set version for spring-boot-maven-plugin because we use the
          spring-boot-parent only in dependencyManagement section, not as parent. -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>dockerBuild</id>

      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <properties>
        <docker.image.prefix>camunda-bpm-cloud</docker.image.prefix>
        <docker.plugin.version>0.4.10</docker.plugin.version>
      </properties>

      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.spotify</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>${docker.plugin.version}</version>
              <executions>
                <execution>
                  <phase>install</phase>
                  <goals>
                    <goal>build</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                <noCache>true</noCache>
                <resources>
                  <resource>
                    <targetPath>/</targetPath>
                    <directory>${project.build.directory}</directory>
                    <include>${project.build.finalName}.jar</include>
                  </resource>
                </resources>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
