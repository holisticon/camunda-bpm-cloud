spring:
  application:
    name: workload-query
  datasource:
    url: jdbc:mysql://${camunda.bpm.cloud.hostname.mysql}:3306/tasklist?useSSL=false
    username: camunda
    password: camunda
  jpa:
    generate-ddl: true
    hibernate.ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
    show-sql: true
  rabbitmq:
    host: ${camunda.bpm.cloud.hostname.rabbitmq}
    username: pcf
    password: pcf


axon:
  amqp:
    exchange: ${camunda.bpm.cloud.amqp.exchange.event}

endpoints:
  info:
    enabled: true

camunda:
  bpm:
    cloud:
      name: ${spring.application.name}
      # task-url-template: http://%s.local.pcfdev.io/#/%s?taskId=%s
      task-url-template: /%s/#/%s?taskId=%s
      amqp:
        prefix: camunda-task
        queue:
          command: ${camunda.bpm.cloud.amqp.prefix}-command
          event: ${camunda.bpm.cloud.amqp.prefix}-event
        exchange:
          command: ${camunda.bpm.cloud.amqp.queue.command}-exchange
          event: ${camunda.bpm.cloud.amqp.queue.event}-exchange

zuul:
  debug:
    request: true
  routes:
    simple-process:
      path: /simple-process/**
      url: ${simple-process.url}
    trivial-process:
      path: /trivial-process/**
      url: ${trivial-process.url}
    workload-query:
      path: /workload/**
      url: http://localhost:${server.port}

ribbon:
  eureka:
    enabled: false
---
spring:
  profiles: local

  datasource:
    url: jdbc:h2:mem:tasklist
    username: sa
    password: sa
  jpa:
    generate-ddl: true
    hibernate.ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    show-sql: true
camunda:
  bpm:
    cloud:
      hostname:
        rabbitmq: localhost
